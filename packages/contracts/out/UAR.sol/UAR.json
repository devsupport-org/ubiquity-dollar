{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "treasuryAddress_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "raiseCapital",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "treasuryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a06040523480156200001157600080fd5b5060405162001294380380620012948339810160408190526200003491620001a0565b82826003620000448382620002bc565b506004620000538282620002bc565b505050620000706200006a6200008560201b60201c565b62000089565b6001600160a01b031660805250620003889050565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200010357600080fd5b81516001600160401b0380821115620001205762000120620000db565b604051601f8301601f19908116603f011681019082821181831017156200014b576200014b620000db565b816040528381526020925086838588010111156200016857600080fd5b600091505b838210156200018c57858201830151818301840152908201906200016d565b600093810190920192909252949350505050565b600080600060608486031215620001b657600080fd5b83516001600160401b0380821115620001ce57600080fd5b620001dc87838801620000f1565b94506020860151915080821115620001f357600080fd5b506200020286828701620000f1565b604086015190935090506001600160a01b03811681146200022257600080fd5b809150509250925092565b600181811c908216806200024257607f821691505b6020821081036200026357634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002b757600081815260208120601f850160051c81016020861015620002925750805b601f850160051c820191505b81811015620002b3578281556001016200029e565b5050505b505050565b81516001600160401b03811115620002d857620002d8620000db565b620002f081620002e984546200022d565b8462000269565b602080601f8311600181146200032857600084156200030f5750858301515b600019600386901b1c1916600185901b178555620002b3565b600085815260208120601f198616915b82811015620003595788860151825594840194600190910190840162000338565b5085821015620003785787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b608051610ee9620003ab6000396000818161023f01526104fd0152610ee96000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80638da5cb5b11610097578063c5f956af11610066578063c5f956af1461023a578063c621bf8a14610261578063dd62ed3e14610274578063f2fde38b146102ba57600080fd5b80638da5cb5b146101cd57806395d89b411461020c578063a457c2d714610214578063a9059cbb1461022757600080fd5b8063313ce567116100d3578063313ce5671461016b578063395093511461017a57806370a082311461018d578063715018a6146101c357600080fd5b806306fdde0314610105578063095ea7b31461012357806318160ddd1461014657806323b872dd14610158575b600080fd5b61010d6102cd565b60405161011a9190610cbd565b60405180910390f35b610136610131366004610d52565b61035f565b604051901515815260200161011a565b6002545b60405190815260200161011a565b610136610166366004610d7c565b610379565b6040516012815260200161011a565b610136610188366004610d52565b61039d565b61014a61019b366004610db8565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b6101cb6103e9565b005b60055473ffffffffffffffffffffffffffffffffffffffff165b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161011a565b61010d6103fd565b610136610222366004610d52565b61040c565b610136610235366004610d52565b6104e2565b6101e77f000000000000000000000000000000000000000000000000000000000000000081565b6101cb61026f366004610dda565b6104f0565b61014a610282366004610df3565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b6101cb6102c8366004610db8565b610525565b6060600380546102dc90610e26565b80601f016020809104026020016040519081016040528092919081815260200182805461030890610e26565b80156103555780601f1061032a57610100808354040283529160200191610355565b820191906000526020600020905b81548152906001019060200180831161033857829003601f168201915b5050505050905090565b60003361036d8185856105d9565b60019150505b92915050565b60003361038785828561078c565b610392858585610863565b506001949350505050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490919061036d90829086906103e4908790610e79565b6105d9565b6103f1610ad2565b6103fb6000610b53565b565b6060600480546102dc90610e26565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168452909152812054909190838110156104d5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61039282868684036105d9565b60003361036d818585610863565b6104f8610ad2565b6105227f000000000000000000000000000000000000000000000000000000000000000082610bca565b50565b61052d610ad2565b73ffffffffffffffffffffffffffffffffffffffff81166105d0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016104cc565b61052281610b53565b73ffffffffffffffffffffffffffffffffffffffff831661067b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016104cc565b73ffffffffffffffffffffffffffffffffffffffff821661071e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f737300000000000000000000000000000000000000000000000000000000000060648201526084016104cc565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461085d5781811015610850576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016104cc565b61085d84848484036105d9565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8316610906576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016104cc565b73ffffffffffffffffffffffffffffffffffffffff82166109a9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f657373000000000000000000000000000000000000000000000000000000000060648201526084016104cc565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205481811015610a5f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e6365000000000000000000000000000000000000000000000000000060648201526084016104cc565b73ffffffffffffffffffffffffffffffffffffffff848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a361085d565b60055473ffffffffffffffffffffffffffffffffffffffff1633146103fb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104cc565b6005805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b73ffffffffffffffffffffffffffffffffffffffff8216610c47576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016104cc565b8060026000828254610c599190610e79565b909155505073ffffffffffffffffffffffffffffffffffffffff8216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600060208083528351808285015260005b81811015610cea57858101830151858201604001528201610cce565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610d4d57600080fd5b919050565b60008060408385031215610d6557600080fd5b610d6e83610d29565b946020939093013593505050565b600080600060608486031215610d9157600080fd5b610d9a84610d29565b9250610da860208501610d29565b9150604084013590509250925092565b600060208284031215610dca57600080fd5b610dd382610d29565b9392505050565b600060208284031215610dec57600080fd5b5035919050565b60008060408385031215610e0657600080fd5b610e0f83610d29565b9150610e1d60208401610d29565b90509250929050565b600181811c90821680610e3a57607f821691505b602082108103610e73577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b80820180821115610373577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea264697066735822122002e3eb9496b249982885ad72b84c2f539274c495144e1242c907916576aa84e564736f6c63430008100033",
    "sourceMap": "206:541:113:-:0;;;296:151;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;382:4;388:6;2042:5:23;:13;382:4:113;2042:5:23;:13;:::i;:::-;-1:-1:-1;2065:7:23;:17;2075:7;2065;:17;:::i;:::-;;1976:113;;936:32:13;955:12;:10;;;:12;;:::i;:::-;936:18;:32::i;:::-;-1:-1:-1;;;;;406:34:113::1;;::::0;-1:-1:-1;206:541:113;;-1:-1:-1;206:541:113;640:96:39;719:10;;640:96::o;2433:187:13:-;2525:6;;;-1:-1:-1;;;;;2541:17:13;;;-1:-1:-1;;;;;;2541:17:13;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;14:127:136:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:136;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:136;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:136:o;991:729::-;1099:6;1107;1115;1168:2;1156:9;1147:7;1143:23;1139:32;1136:52;;;1184:1;1181;1174:12;1136:52;1211:16;;-1:-1:-1;;;;;1276:14:136;;;1273:34;;;1303:1;1300;1293:12;1273:34;1326:61;1379:7;1370:6;1359:9;1355:22;1326:61;:::i;:::-;1316:71;;1433:2;1422:9;1418:18;1412:25;1396:41;;1462:2;1452:8;1449:16;1446:36;;;1478:1;1475;1468:12;1446:36;;1501:63;1556:7;1545:8;1534:9;1530:24;1501:63;:::i;:::-;1607:2;1592:18;;1586:25;1491:73;;-1:-1:-1;1586:25:136;-1:-1:-1;;;;;;1640:31:136;;1630:42;;1620:70;;1686:1;1683;1676:12;1620:70;1709:5;1699:15;;;991:729;;;;;:::o;1725:380::-;1804:1;1800:12;;;;1847;;;1868:61;;1922:4;1914:6;1910:17;1900:27;;1868:61;1975:2;1967:6;1964:14;1944:18;1941:38;1938:161;;2021:10;2016:3;2012:20;2009:1;2002:31;2056:4;2053:1;2046:15;2084:4;2081:1;2074:15;1938:161;;1725:380;;;:::o;2236:545::-;2338:2;2333:3;2330:11;2327:448;;;2374:1;2399:5;2395:2;2388:17;2444:4;2440:2;2430:19;2514:2;2502:10;2498:19;2495:1;2491:27;2485:4;2481:38;2550:4;2538:10;2535:20;2532:47;;;-1:-1:-1;2573:4:136;2532:47;2628:2;2623:3;2619:12;2616:1;2612:20;2606:4;2602:31;2592:41;;2683:82;2701:2;2694:5;2691:13;2683:82;;;2746:17;;;2727:1;2716:13;2683:82;;;2687:3;;;2327:448;2236:545;;;:::o;2957:1352::-;3077:10;;-1:-1:-1;;;;;3099:30:136;;3096:56;;;3132:18;;:::i;:::-;3161:97;3251:6;3211:38;3243:4;3237:11;3211:38;:::i;:::-;3205:4;3161:97;:::i;:::-;3313:4;;3377:2;3366:14;;3394:1;3389:663;;;;4096:1;4113:6;4110:89;;;-1:-1:-1;4165:19:136;;;4159:26;4110:89;-1:-1:-1;;2914:1:136;2910:11;;;2906:24;2902:29;2892:40;2938:1;2934:11;;;2889:57;4212:81;;3359:944;;3389:663;2183:1;2176:14;;;2220:4;2207:18;;-1:-1:-1;;3425:20:136;;;3543:236;3557:7;3554:1;3551:14;3543:236;;;3646:19;;;3640:26;3625:42;;3738:27;;;;3706:1;3694:14;;;;3573:19;;3543:236;;;3547:3;3807:6;3798:7;3795:19;3792:201;;;3868:19;;;3862:26;-1:-1:-1;;3951:1:136;3947:14;;;3963:3;3943:24;3939:37;3935:42;3920:58;3905:74;;3792:201;-1:-1:-1;;;;;4039:1:136;4023:14;;;4019:22;4006:36;;-1:-1:-1;2957:1352:136:o;:::-;206:541:113;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101005760003560e01c80638da5cb5b11610097578063c5f956af11610066578063c5f956af1461023a578063c621bf8a14610261578063dd62ed3e14610274578063f2fde38b146102ba57600080fd5b80638da5cb5b146101cd57806395d89b411461020c578063a457c2d714610214578063a9059cbb1461022757600080fd5b8063313ce567116100d3578063313ce5671461016b578063395093511461017a57806370a082311461018d578063715018a6146101c357600080fd5b806306fdde0314610105578063095ea7b31461012357806318160ddd1461014657806323b872dd14610158575b600080fd5b61010d6102cd565b60405161011a9190610cbd565b60405180910390f35b610136610131366004610d52565b61035f565b604051901515815260200161011a565b6002545b60405190815260200161011a565b610136610166366004610d7c565b610379565b6040516012815260200161011a565b610136610188366004610d52565b61039d565b61014a61019b366004610db8565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b6101cb6103e9565b005b60055473ffffffffffffffffffffffffffffffffffffffff165b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161011a565b61010d6103fd565b610136610222366004610d52565b61040c565b610136610235366004610d52565b6104e2565b6101e77f000000000000000000000000000000000000000000000000000000000000000081565b6101cb61026f366004610dda565b6104f0565b61014a610282366004610df3565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b6101cb6102c8366004610db8565b610525565b6060600380546102dc90610e26565b80601f016020809104026020016040519081016040528092919081815260200182805461030890610e26565b80156103555780601f1061032a57610100808354040283529160200191610355565b820191906000526020600020905b81548152906001019060200180831161033857829003601f168201915b5050505050905090565b60003361036d8185856105d9565b60019150505b92915050565b60003361038785828561078c565b610392858585610863565b506001949350505050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490919061036d90829086906103e4908790610e79565b6105d9565b6103f1610ad2565b6103fb6000610b53565b565b6060600480546102dc90610e26565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168452909152812054909190838110156104d5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61039282868684036105d9565b60003361036d818585610863565b6104f8610ad2565b6105227f000000000000000000000000000000000000000000000000000000000000000082610bca565b50565b61052d610ad2565b73ffffffffffffffffffffffffffffffffffffffff81166105d0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016104cc565b61052281610b53565b73ffffffffffffffffffffffffffffffffffffffff831661067b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016104cc565b73ffffffffffffffffffffffffffffffffffffffff821661071e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f737300000000000000000000000000000000000000000000000000000000000060648201526084016104cc565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461085d5781811015610850576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016104cc565b61085d84848484036105d9565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8316610906576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016104cc565b73ffffffffffffffffffffffffffffffffffffffff82166109a9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f657373000000000000000000000000000000000000000000000000000000000060648201526084016104cc565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205481811015610a5f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e6365000000000000000000000000000000000000000000000000000060648201526084016104cc565b73ffffffffffffffffffffffffffffffffffffffff848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a361085d565b60055473ffffffffffffffffffffffffffffffffffffffff1633146103fb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104cc565b6005805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b73ffffffffffffffffffffffffffffffffffffffff8216610c47576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016104cc565b8060026000828254610c599190610e79565b909155505073ffffffffffffffffffffffffffffffffffffffff8216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600060208083528351808285015260005b81811015610cea57858101830151858201604001528201610cce565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610d4d57600080fd5b919050565b60008060408385031215610d6557600080fd5b610d6e83610d29565b946020939093013593505050565b600080600060608486031215610d9157600080fd5b610d9a84610d29565b9250610da860208501610d29565b9150604084013590509250925092565b600060208284031215610dca57600080fd5b610dd382610d29565b9392505050565b600060208284031215610dec57600080fd5b5035919050565b60008060408385031215610e0657600080fd5b610e0f83610d29565b9150610e1d60208401610d29565b90509250929050565b600181811c90821680610e3a57607f821691505b602082108103610e73577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b80820180821115610373577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea264697066735822122002e3eb9496b249982885ad72b84c2f539274c495144e1242c907916576aa84e564736f6c63430008100033",
    "sourceMap": "206:541:113:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4431:197;;;;;;:::i;:::-;;:::i;:::-;;;1251:14:136;;1244:22;1226:41;;1214:2;1199:18;4431:197:23;1086:187:136;3242:106:23;3329:12;;3242:106;;;1424:25:136;;;1412:2;1397:18;3242:106:23;1278:177:136;5190:286:23;;;;;;:::i;:::-;;:::i;3091:91::-;;;3173:2;1935:36:136;;1923:2;1908:18;3091:91:23;1793:184:136;5871:234:23;;;;;;:::i;:::-;;:::i;3406:125::-;;;;;;:::i;:::-;3506:18;;3480:7;3506:18;;;;;;;;;;;;3406:125;1831:101:13;;;:::i;:::-;;1201:85;1273:6;;;;1201:85;;;2349:42:136;2337:55;;;2319:74;;2307:2;2292:18;1201:85:13;2173:226:136;2365:102:23;;;:::i;6592:427::-;;;;;;:::i;:::-;;:::i;3727:189::-;;;;;;:::i;:::-;;:::i;249:40:113:-;;;;;632:113;;;;;;:::i;:::-;;:::i;3974:149:23:-;;;;;;:::i;:::-;4089:18;;;;4063:7;4089:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3974:149;2081:198:13;;;;;;:::i;:::-;;:::i;2154:98:23:-;2208:13;2240:5;2233:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;:::o;4431:197::-;4514:4;719:10:39;4568:32:23;719:10:39;4584:7:23;4593:6;4568:8;:32::i;:::-;4617:4;4610:11;;;4431:197;;;;;:::o;5190:286::-;5317:4;719:10:39;5373:38:23;5389:4;719:10:39;5404:6:23;5373:15;:38::i;:::-;5421:27;5431:4;5437:2;5441:6;5421:9;:27::i;:::-;-1:-1:-1;5465:4:23;;5190:286;-1:-1:-1;;;;5190:286:23:o;5871:234::-;719:10:39;5959:4:23;4089:18;;;:11;:18;;;;;;;;;:27;;;;;;;;;;5959:4;;719:10:39;6013:64:23;;719:10:39;;4089:27:23;;6038:38;;6066:10;;6038:38;:::i;:::-;6013:8;:64::i;1831:101:13:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;2365:102:23:-;2421:13;2453:7;2446:14;;;;;:::i;6592:427::-;719:10:39;6685:4:23;4089:18;;;:11;:18;;;;;;;;;:27;;;;;;;;;;6685:4;;719:10:39;6829:15:23;6809:16;:35;;6801:85;;;;;;;3782:2:136;6801:85:23;;;3764:21:136;3821:2;3801:18;;;3794:30;3860:34;3840:18;;;3833:62;3931:7;3911:18;;;3904:35;3956:19;;6801:85:23;;;;;;;;;6920:60;6929:5;6936:7;6964:15;6945:16;:34;6920:8;:60::i;3727:189::-;3806:4;719:10:39;3860:28:23;719:10:39;3877:2:23;3881:6;3860:9;:28::i;632:113:113:-;1094:13:13;:11;:13::i;:::-;708:30:113::1;714:15;731:6;708:5;:30::i;:::-;632:113:::0;:::o;2081:198:13:-;1094:13;:11;:13::i;:::-;2169:22:::1;::::0;::::1;2161:73;;;::::0;::::1;::::0;;4188:2:136;2161:73:13::1;::::0;::::1;4170:21:136::0;4227:2;4207:18;;;4200:30;4266:34;4246:18;;;4239:62;4337:8;4317:18;;;4310:36;4363:19;;2161:73:13::1;3986:402:136::0;2161:73:13::1;2244:28;2263:8;2244:18;:28::i;10504:370:23:-:0;10635:19;;;10627:68;;;;;;;4595:2:136;10627:68:23;;;4577:21:136;4634:2;4614:18;;;4607:30;4673:34;4653:18;;;4646:62;4744:6;4724:18;;;4717:34;4768:19;;10627:68:23;4393:400:136;10627:68:23;10713:21;;;10705:68;;;;;;;5000:2:136;10705:68:23;;;4982:21:136;5039:2;5019:18;;;5012:30;5078:34;5058:18;;;5051:62;5149:4;5129:18;;;5122:32;5171:19;;10705:68:23;4798:398:136;10705:68:23;10784:18;;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10835:32;;1424:25:136;;;10835:32:23;;1397:18:136;10835:32:23;;;;;;;10504:370;;;:::o;11155:441::-;4089:18;;;;11285:24;4089:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;11371:17;11351:37;;11347:243;;11432:6;11412:16;:26;;11404:68;;;;;;;5403:2:136;11404:68:23;;;5385:21:136;5442:2;5422:18;;;5415:30;5481:31;5461:18;;;5454:59;5530:18;;11404:68:23;5201:353:136;11404:68:23;11514:51;11523:5;11530:7;11558:6;11539:16;:25;11514:8;:51::i;:::-;11275:321;11155:441;;;:::o;7473:818::-;7599:18;;;7591:68;;;;;;;5761:2:136;7591:68:23;;;5743:21:136;5800:2;5780:18;;;5773:30;5839:34;5819:18;;;5812:62;5910:7;5890:18;;;5883:35;5935:19;;7591:68:23;5559:401:136;7591:68:23;7677:16;;;7669:64;;;;;;;6167:2:136;7669:64:23;;;6149:21:136;6206:2;6186:18;;;6179:30;6245:34;6225:18;;;6218:62;6316:5;6296:18;;;6289:33;6339:19;;7669:64:23;5965:399:136;7669:64:23;7815:15;;;7793:19;7815:15;;;;;;;;;;;7848:21;;;;7840:72;;;;;;;6571:2:136;7840:72:23;;;6553:21:136;6610:2;6590:18;;;6583:30;6649:34;6629:18;;;6622:62;6720:8;6700:18;;;6693:36;6746:19;;7840:72:23;6369:402:136;7840:72:23;7946:15;;;;:9;:15;;;;;;;;;;;7964:20;;;7946:38;;8161:13;;;;;;;;;;:23;;;;;;8210:26;;1424:25:136;;;8161:13:23;;8210:26;;1397:18:136;8210:26:23;;;;;;;8247:37;12180:121;1359:130:13;1273:6;;1422:23;1273:6;719:10:39;1422:23:13;1414:68;;;;;;;6978:2:136;1414:68:13;;;6960:21:136;;;6997:18;;;6990:30;7056:34;7036:18;;;7029:62;7108:18;;1414:68:13;6776:356:136;2433:187:13;2525:6;;;;2541:17;;;;;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;8567:535:23:-;8650:21;;;8642:65;;;;;;;7339:2:136;8642:65:23;;;7321:21:136;7378:2;7358:18;;;7351:30;7417:33;7397:18;;;7390:61;7468:18;;8642:65:23;7137:355:136;8642:65:23;8794:6;8778:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;8946:18:23;;;:9;:18;;;;;;;;;;;:28;;;;;;8999:37;1424:25:136;;;8999:37:23;;1397:18:136;8999:37:23;;;;;;;8567:535;;:::o;14:607:136:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;612:2;542:66;537:2;529:6;525:15;521:88;510:9;506:104;502:113;494:121;;;;14:607;;;;:::o;626:196::-;694:20;;754:42;743:54;;733:65;;723:93;;812:1;809;802:12;723:93;626:196;;;:::o;827:254::-;895:6;903;956:2;944:9;935:7;931:23;927:32;924:52;;;972:1;969;962:12;924:52;995:29;1014:9;995:29;:::i;:::-;985:39;1071:2;1056:18;;;;1043:32;;-1:-1:-1;;;827:254:136:o;1460:328::-;1537:6;1545;1553;1606:2;1594:9;1585:7;1581:23;1577:32;1574:52;;;1622:1;1619;1612:12;1574:52;1645:29;1664:9;1645:29;:::i;:::-;1635:39;;1693:38;1727:2;1716:9;1712:18;1693:38;:::i;:::-;1683:48;;1778:2;1767:9;1763:18;1750:32;1740:42;;1460:328;;;;;:::o;1982:186::-;2041:6;2094:2;2082:9;2073:7;2069:23;2065:32;2062:52;;;2110:1;2107;2100:12;2062:52;2133:29;2152:9;2133:29;:::i;:::-;2123:39;1982:186;-1:-1:-1;;;1982:186:136:o;2404:180::-;2463:6;2516:2;2504:9;2495:7;2491:23;2487:32;2484:52;;;2532:1;2529;2522:12;2484:52;-1:-1:-1;2555:23:136;;2404:180;-1:-1:-1;2404:180:136:o;2589:260::-;2657:6;2665;2718:2;2706:9;2697:7;2693:23;2689:32;2686:52;;;2734:1;2731;2724:12;2686:52;2757:29;2776:9;2757:29;:::i;:::-;2747:39;;2805:38;2839:2;2828:9;2824:18;2805:38;:::i;:::-;2795:48;;2589:260;;;;;:::o;2854:437::-;2933:1;2929:12;;;;2976;;;2997:61;;3051:4;3043:6;3039:17;3029:27;;2997:61;3104:2;3096:6;3093:14;3073:18;3070:38;3067:218;;3141:77;3138:1;3131:88;3242:4;3239:1;3232:15;3270:4;3267:1;3260:15;3067:218;;2854:437;;;:::o;3296:279::-;3361:9;;;3382:10;;;3379:190;;;3425:77;3422:1;3415:88;3526:4;3523:1;3516:15;3554:4;3551:1;3544:15",
    "linkReferences": {},
    "immutableReferences": {
      "55018": [
        {
          "start": 575,
          "length": 32
        },
        {
          "start": 1277,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "increaseAllowance(address,uint256)": "39509351",
    "name()": "06fdde03",
    "owner()": "8da5cb5b",
    "raiseCapital(uint256)": "c621bf8a",
    "renounceOwnership()": "715018a6",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b",
    "treasuryAddress()": "c5f956af"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"treasuryAddress_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"raiseCapital\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasuryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"raiseCapital(uint256)\":{\"details\":\"you should be minter to call that function\",\"params\":{\"amount\":\"the amount to be minted\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"raiseCapital(uint256)\":{\"notice\":\"raise capital in form of uAR (only redeemable when uAD > 1$)\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/ubiquistick/UAR.sol\":\"UAR\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v2-core/contracts/=lib/Uniswap/v2-core/contracts/\",\":@uniswap/v2-periphery/contracts/=lib/Uniswap/v2-periphery/contracts/\",\":Uniswap/=lib/Uniswap/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":solidity-linked-list/=lib/solidity-linked-list/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x3270d2a7a042dda9cf85dddd16e6106c2c9ad784c0972315630b2a148215fa7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b394e20d57877a825c24c1841e219d6ab1e41decec060ea935422ac9b7a25f8a\",\"dweb:/ipfs/QmVTaGCMR4Gi9w1LUVVcjEJHrHF2qcr1avFkLtsLD6sEAr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"src/ubiquistick/UAR.sol\":{\"keccak256\":\"0xc04a51b27a8626944f187a8e381db33355cdaafe7c24d85056a876773ce721e1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0396d97ec0a0625eb4b63b07b616099f93f400b784b1a15bba936dc7da3c9905\",\"dweb:/ipfs/Qme9CaDt39uF9iKLjbHcA7SRXS6YbRRYjsTCpgnJGxC1Mt\"]},\"src/ubiquistick/interfaces/IUAR.sol\":{\"keccak256\":\"0x51eeeb5dd46c223bf7b4ae0a53100a5f4ea16ae2c3e5b5bb3b05df5cb3b82159\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://48caa1b0ad1fb0e2550f4413e70181b0330c1f0f051d655c4140e842f3507198\",\"dweb:/ipfs/QmdQNQUtUo57nR7eiRHBJ6WwNmLnEnmCSrsKqNR9qJauDf\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.16+commit.07a7930e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "treasuryAddress_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "raiseCapital"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "treasuryAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "raiseCapital(uint256)": {
            "details": "you should be minter to call that function",
            "params": {
              "amount": "the amount to be minted"
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "raiseCapital(uint256)": {
            "notice": "raise capital in form of uAR (only redeemable when uAD > 1$)"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":@uniswap/v2-core/contracts/=lib/Uniswap/v2-core/contracts/",
        ":@uniswap/v2-periphery/contracts/=lib/Uniswap/v2-periphery/contracts/",
        ":Uniswap/=lib/Uniswap/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":solidity-linked-list/=lib/solidity-linked-list/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/ubiquistick/UAR.sol": "UAR"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x3270d2a7a042dda9cf85dddd16e6106c2c9ad784c0972315630b2a148215fa7d",
        "urls": [
          "bzz-raw://b394e20d57877a825c24c1841e219d6ab1e41decec060ea935422ac9b7a25f8a",
          "dweb:/ipfs/QmVTaGCMR4Gi9w1LUVVcjEJHrHF2qcr1avFkLtsLD6sEAr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "src/ubiquistick/UAR.sol": {
        "keccak256": "0xc04a51b27a8626944f187a8e381db33355cdaafe7c24d85056a876773ce721e1",
        "urls": [
          "bzz-raw://0396d97ec0a0625eb4b63b07b616099f93f400b784b1a15bba936dc7da3c9905",
          "dweb:/ipfs/Qme9CaDt39uF9iKLjbHcA7SRXS6YbRRYjsTCpgnJGxC1Mt"
        ],
        "license": "Apache-2.0"
      },
      "src/ubiquistick/interfaces/IUAR.sol": {
        "keccak256": "0x51eeeb5dd46c223bf7b4ae0a53100a5f4ea16ae2c3e5b5bb3b05df5cb3b82159",
        "urls": [
          "bzz-raw://48caa1b0ad1fb0e2550f4413e70181b0330c1f0f051d655c4140e842f3507198",
          "dweb:/ipfs/QmdQNQUtUo57nR7eiRHBJ6WwNmLnEnmCSrsKqNR9qJauDf"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/ubiquistick/UAR.sol",
    "id": 55053,
    "exportedSymbols": {
      "Context": [
        29814
      ],
      "ERC20": [
        26796
      ],
      "IERC20": [
        26874
      ],
      "IERC20Metadata": [
        27611
      ],
      "IUAR": [
        55193
      ],
      "Ownable": [
        24361
      ],
      "UAR": [
        55052
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:709:113",
    "nodes": [
      {
        "id": 55007,
        "nodeType": "PragmaDirective",
        "src": "39:23:113",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".3"
        ]
      },
      {
        "id": 55008,
        "nodeType": "ImportDirective",
        "src": "64:55:113",
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 55053,
        "sourceUnit": 26797,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 55009,
        "nodeType": "ImportDirective",
        "src": "120:52:113",
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 55053,
        "sourceUnit": 24362,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 55010,
        "nodeType": "ImportDirective",
        "src": "173:31:113",
        "absolutePath": "src/ubiquistick/interfaces/IUAR.sol",
        "file": "./interfaces/IUAR.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 55053,
        "sourceUnit": 55194,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 55052,
        "nodeType": "ContractDefinition",
        "src": "206:541:113",
        "nodes": [
          {
            "id": 55018,
            "nodeType": "VariableDeclaration",
            "src": "249:40:113",
            "constant": false,
            "functionSelector": "c5f956af",
            "mutability": "immutable",
            "name": "treasuryAddress",
            "nameLocation": "274:15:113",
            "scope": 55052,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 55017,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "249:7:113",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 55036,
            "nodeType": "FunctionDefinition",
            "src": "296:151:113",
            "body": {
              "id": 55035,
              "nodeType": "Block",
              "src": "396:51:113",
              "statements": [
                {
                  "expression": {
                    "id": 55033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 55031,
                      "name": "treasuryAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55018,
                      "src": "406:15:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 55032,
                      "name": "treasuryAddress_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55024,
                      "src": "424:16:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "406:34:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 55034,
                  "nodeType": "ExpressionStatement",
                  "src": "406:34:113"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 55027,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 55020,
                    "src": "382:4:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 55028,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 55022,
                    "src": "388:6:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 55029,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 55026,
                  "name": "ERC20",
                  "nameLocations": [
                    "376:5:113"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 26796,
                  "src": "376:5:113"
                },
                "nodeType": "ModifierInvocation",
                "src": "376:19:113"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 55025,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55020,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "322:4:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 55036,
                  "src": "308:18:113",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 55019,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "308:6:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55022,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "342:6:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 55036,
                  "src": "328:20:113",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 55021,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "328:6:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55024,
                  "mutability": "mutable",
                  "name": "treasuryAddress_",
                  "nameLocation": "358:16:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 55036,
                  "src": "350:24:113",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 55023,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "350:7:113",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "307:68:113"
            },
            "returnParameters": {
              "id": 55030,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "396:0:113"
            },
            "scope": 55052,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 55051,
            "nodeType": "FunctionDefinition",
            "src": "632:113:113",
            "body": {
              "id": 55050,
              "nodeType": "Block",
              "src": "698:47:113",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 55046,
                        "name": "treasuryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55018,
                        "src": "714:15:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 55047,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55039,
                        "src": "731:6:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 55045,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26613,
                      "src": "708:5:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 55048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "708:30:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55049,
                  "nodeType": "ExpressionStatement",
                  "src": "708:30:113"
                }
              ]
            },
            "baseFunctions": [
              55192
            ],
            "documentation": {
              "id": 55037,
              "nodeType": "StructuredDocumentation",
              "src": "453:174:113",
              "text": "@notice raise capital in form of uAR (only redeemable when uAD > 1$)\n @param amount the amount to be minted\n @dev you should be minter to call that function"
            },
            "functionSelector": "c621bf8a",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 55043,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 55042,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "688:9:113"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24280,
                  "src": "688:9:113"
                },
                "nodeType": "ModifierInvocation",
                "src": "688:9:113"
              }
            ],
            "name": "raiseCapital",
            "nameLocation": "641:12:113",
            "overrides": {
              "id": 55041,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "679:8:113"
            },
            "parameters": {
              "id": 55040,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55039,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "662:6:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 55051,
                  "src": "654:14:113",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55038,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "654:7:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "653:16:113"
            },
            "returnParameters": {
              "id": 55044,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "698:0:113"
            },
            "scope": 55052,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 55011,
              "name": "IUAR",
              "nameLocations": [
                "222:4:113"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 55193,
              "src": "222:4:113"
            },
            "id": 55012,
            "nodeType": "InheritanceSpecifier",
            "src": "222:4:113"
          },
          {
            "baseName": {
              "id": 55013,
              "name": "ERC20",
              "nameLocations": [
                "228:5:113"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 26796,
              "src": "228:5:113"
            },
            "id": 55014,
            "nodeType": "InheritanceSpecifier",
            "src": "228:5:113"
          },
          {
            "baseName": {
              "id": 55015,
              "name": "Ownable",
              "nameLocations": [
                "235:7:113"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 24361,
              "src": "235:7:113"
            },
            "id": 55016,
            "nodeType": "InheritanceSpecifier",
            "src": "235:7:113"
          }
        ],
        "canonicalName": "UAR",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          55052,
          24361,
          26796,
          27611,
          26874,
          29814,
          55193
        ],
        "name": "UAR",
        "nameLocation": "215:3:113",
        "scope": 55053,
        "usedErrors": []
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 113
}